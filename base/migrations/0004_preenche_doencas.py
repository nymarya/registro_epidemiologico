# Generated by Django 3.1.7 on 2021-03-06 01:11
import csv

from django.db import migrations

from base.models import Doenca


def create(apps, schema_editor):
    # Doenças retiradas do endereço
    # bvsms.saude.gov.br/ultimas-noticias/3132-dia-mundial-e-dia-nacional-das-doencas-raras-ultimo-dia-do-mes-de-fevereiro
    doencas = ['Acromegalia', 'Anemia aplástica, mielodisplasia e neutropenias constitucionais', 'Angioedema', 'Aplasia pura adquirida crônica da série vermelha', 'Artrite reativa', 'Biotinidase', 'Deficiência de hormônio do crescimento – hipopituitarismo', 'Dermatomiosite e polimiosite', 'Diabetes insípido', 'Distonias e espasmo hemifacial', 'Doença de Crohn', 'Doença falciforme', 'Doença de Gaucher', 'Doença de Huntington', 'Doença de MachadoJoseph', 'Doença de Paget – osteíte deformante', 'Doença de Wilson', 'Epidermólise bolhosa', 'Esclerose lateral amiotrófica', 'Esclerose múltipla', 'Espondilite ancilosante', 'Febre mediterrânea familiar', 'Fenilcetonúria', 'Fibrose cística', 'Filariose linfática', 'Hemoglobinúria paroxística noturna', 'Hepatite autoimune', 'Hiperplasia adrenal congênita', 'Hipertensão arterial pulmonar', 'Hipoparatireoidismo', 'Hipotireoidismo congênito', 'Ictioses hereditárias', 'Imunodeficiência primária com predominância de defeitos de anticorpos', 'Insuficiência adrenal congênita', 'Insuficiência pancreática exócrina', 'Leucemia mielóide crônica (adultos)', 'Leucemia mielóide crônica (crianças e adolescentes)', 'Lúpus eritematoso sistêmico', 'Miastenia gravis', 'Mieloma múltiplo', 'Mucopolissacaridose tipo I', 'Mucopolissacaridose tipo II', 'Osteogênese imperfeita', 'Púrpura trombocitopênica idiopática', 'Sarcoma das partes moles', 'Síndrome hemolíticourêmica atípica (Shua)', 'Síndrome de Cushing', 'Síndrome de GuillainBarré', 'Síndrome de Turner', 'Síndrome nefrótica primária em crianças e adolescentes', 'Talassemias', 'Tumores neuroendócrinos (TNEs).']

    for nome in doencas:
        doenca = Doenca(nome=nome)
        with open('base/fixtures/CID-10-SUBCATEGORIAS.CSV',
                  encoding='latin1') as f:
            reader = csv.DictReader(f, delimiter=';')
            for row in reader:
                if row["DESCRICAO"] == nome:
                    doenca.cid = row["SUBCAT"]
                    break

        with open('base/fixtures/CID-10-CATEGORIAS.CSV',
                  encoding='latin1') as f:
            reader = csv.DictReader(f, delimiter=';')
            for row in reader:
                if row["DESCRICAO"] == nome:
                    doenca.cid = row["CAT"]
                    break
        doenca.save()


def delete(apps, schema_editor):
    Doenca.objects.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0003_auto_20210306_0105'),
    ]

    operations = [
        migrations.RunPython(create, delete),
    ]

